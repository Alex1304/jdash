(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[532],{2127:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return h}});var n=a(2122),o=a(9756),r=(a(7294),a(3905)),i=a(1395),s=a(8215),l={title:"JDash Graphics"},c={unversionedId:"jdash-graphics",id:"jdash-graphics",isDocsHomePage:!1,title:"JDash Graphics",description:"This section will cover the features of the JDash Graphics module.",source:"@site/docs/jdash-graphics.md",sourceDirName:".",slug:"/jdash-graphics",permalink:"/jdash-graphics",editUrl:"https://github.com/Alex1304/jdash/edit/master/website/docs/jdash-graphics.md",version:"current",frontMatter:{title:"JDash Graphics"},sidebar:"someSidebar",previous:{title:"JDash Events",permalink:"/jdash-events"}},p=[{value:"Installation",id:"installation",children:[]},{value:"The <code>SpriteFactory</code>",id:"the-spritefactory",children:[]},{value:"The <code>GDUserIconSet</code>",id:"the-gdusericonset",children:[]}],d={toc:p};function h(e){var t=e.components,a=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This section will cover the features of the JDash Graphics module."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Add the Maven or Gradle dependency to your project as described below:"),(0,r.kt)(i.Z,{groupId:"build-tools",defaultValue:"maven",values:[{label:"Maven",value:"maven"},{label:"Gradle",value:"gradle"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"maven",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.alex1304.jdash</groupId>\n    <artifactId>jdash-graphics</artifactId>\n    <version>${version}</version> \x3c!-- replace with latest version --\x3e\n</dependency>\n"))),(0,r.kt)(s.Z,{value:"gradle",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"repositories {\n    mavenCentral()\n}\n\ndependencies {\n    // Replace ${version} with latest version\n    implementation 'com.alex1304.jdash:jdash-graphics:${version}'\n}\n")))),(0,r.kt)("h2",{id:"the-spritefactory"},"The ",(0,r.kt)("inlineCode",{parentName:"h2"},"SpriteFactory")),(0,r.kt)("p",null,"The JDash Graphics module is quite small so there is not much to say here. It only contains two important classes, ",(0,r.kt)("inlineCode",{parentName:"p"},"SpriteFactory")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"GDUserIconSet"),". Let's talk about the first one to begin with."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SpriteFactory")," is the class that will load the game assets in memory in order to do some image processing on them. You can then use it to generate icons on demand."),(0,r.kt)("p",null,"You create a new ",(0,r.kt)("inlineCode",{parentName:"p"},"SpriteFactory")," with the ",(0,r.kt)("inlineCode",{parentName:"p"},"create()")," method. Easy."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"SpriteFactory spriteFactory = SpriteFactory.create();\n")),(0,r.kt)("p",null,"Now you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"makeSprite")," to generate the icon of your choice:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"BufferedImage image = spriteFactory.makeSprite(type, id, color1Id, color2Id, withGlowOutline);\n")),(0,r.kt)("p",null,"There are quite a lot of parameters. You need to specify the type of icon (cube, ship, UFO...), the icon ID, the color 1 ID, the color 2 ID, and whether to add the glow outline on the icon."),(0,r.kt)("h2",{id:"the-gdusericonset"},"The ",(0,r.kt)("inlineCode",{parentName:"h2"},"GDUserIconSet")),(0,r.kt)("p",null,"This class is more handy to generate icons when you have a ",(0,r.kt)("inlineCode",{parentName:"p"},"GDUserProfile")," object. You can create one like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"GDUserProfile user = ...;\nGDUserIconSet iconSet = GDUserIconSet.create(user, spriteFactory);\n")),(0,r.kt)("p",null,"Now if you want to generate let's say the ship of the user, you only need to provide 1 parameter instead of the 5 of ",(0,r.kt)("inlineCode",{parentName:"p"},"SpriteFactory.makeSprite"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"BufferedImage image = iconSet.generateIcon(IconType.SHIP);\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("inlineCode",{parentName:"p"},"BufferedImage")," is a type from the Java Graphics API, you can for example save it to a file with ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageIO.write()"),":"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ImageIO.write(image, "png", new File("icon.png"));\n')))))}h.isMDXComponent=!0}}]);